substitutions:
  log_level: "DEBUG"
  root_path: "../../.."

esphome:
  name: "${node_name}"
  name_add_mac_suffix: false
  build_path: "${root_path}/build/${node_name}"

logger:
  level: "${log_level}"

api:
  password: "${api_key}"
  port: 6053  # Default
  reboot_timeout: "30min"
  encryption:
    key: "${api_encryption_key}"

ota:
  password: "${ota_password}"
  safe_mode: true

time:
  - platform: "homeassistant"
    id: "current_time"
    on_time_sync:
      - component.update: "uptime_timestamp"

binary_sensor:
  - platform: "status"
    name: "${display_name} status"

sensor:
  - platform: "uptime"
    id: "uptime_seconds"
    internal: true

  - platform: "template"
    id: "uptime_timestamp"
    name: "${display_name} uptime"
    device_class: "timestamp"
    entity_category: "diagnostic"
    accuracy_decimals: 0
    update_interval: "never"
    lambda: |-
      static float timestamp = (
        id(current_time).utcnow().timestamp - id(uptime_seconds).state
      );
      return timestamp;

text_sensor:
  - platform: "version"
    name: "${display_name} ESPHome version"

button:
  - platform: "restart"
    name: "Restart ${display_name}"
    entity_category: "diagnostic"
  - platform: "safe_mode"
    name: "Restart ${display_name} (safe mode)"
    entity_category: "diagnostic"
