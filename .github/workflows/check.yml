name: "Validate"

"on": ["push"]

jobs:
  check:
    name: "Static check"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"
      - name: "Lint"
        run: "make lint"

  prepare:
    name: "Prepare environment"
    runs-on: "ubuntu-latest"
    outputs:
      devices: "${{ steps.list-devices.outputs.devices }}"
    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"

      - uses: "actions/setup-python@v4"
        id: "setup-python"
        with:
          python-version: "3.11.1"
          cache: "pip"

      - name: "Install python dependencies"
        run: "pip install -r requirements.txt"

      - name: "List devices"
        id: "list-devices"
        run: |
          devices_json=$(ls ./config/devices/ | jq -R -s -c 'split("\n")[:-1]')
          echo "devices=$devices_json" >> $GITHUB_OUTPUT

  compile:
    name: "Compile ${{ matrix.device }}"
    runs-on: "ubuntu-latest"
    needs: "prepare"
    strategy:
      fail-fast: true
      matrix:
        device: "${{ fromJSON(needs.prepare.outputs.devices) }}"
    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"

      - uses: "actions/setup-python@v4"
        id: "setup-python"
        with:
          python-version: "3.11.1"
          cache: "pip"

      - name: "Install python dependencies"
        run: "pip install -r requirements.txt"

      - name: "Compile"
        run: |
          device_path=$(realpath "./config/devices/${{ matrix.device }}")

          cp -f "$device_path/.secrets.blank.yaml" "$device_path/secrets.yaml"
          python -m esphome compile "$device_path/main.yaml"
